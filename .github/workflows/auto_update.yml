name: Auto Update Android GSI with Magisk

on:
  schedule:
    - cron: '0 0 * * 0'    # 每周日 UTC 00:00 运行
  workflow_dispatch:      # 支持手动触发

jobs:
  update-image:
    runs-on: ubuntu-latest

    steps:
    # 1. 下载 v1.0.0 模板（压缩版）
    - name: 下载 v1.0.0 模板镜像 System
      uses: robinraju/release-downloader@v1
      with:
        repository: ${{ github.repository }}
        tag: 'v1.0.0'
        fileName: 'system.img.xz'
    
    - name: 下载 v1.0.0 模板镜像 Boot
      uses: robinraju/release-downloader@v1
      with:
        repository: ${{ github.repository }}
        tag: 'v1.0.0'
        fileName: 'boot.img.xz'
          

    # 2. 解压并准备原始镜像
    - name: 解压模板镜像
      run: |
        mkdir -p original
        xz -d system.img.xz
        xz -d boot.img.xz
        mv system.img original/system.img
        mv boot.img original/boot.img

    # 3. 安装 libguestfs & supermin 依赖
    - name: 安装 GuestFS 及 Supermin 依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libguestfs-tools supermin \
          unzip wget xz-utils cmake pkg-config \
          liblzma-dev liblz4-dev libbz2-dev zlib1g-dev \
          clang rustc cargo ninja-build
        # 确保内核镜像可读、更新 appliance 缓存
        sudo chmod a+r /boot/vmlinuz-* || true
        echo 'export LIBGUESTFS_BACKEND=direct' >> $GITHUB_ENV

    # 4. 随机化机型 ↔ 厂商对
    - name: 随机化机型与厂商
      id: gen_device
      run: |
        declare -A DEVICE_MAP=(
          [Pixel_3]=Google   [Pixel_4]=Google
          [Galaxy_S10]=Samsung [Galaxy_S20]=Samsung
          [OnePlus_7]=OnePlus [OnePlus_8]=OnePlus
          [Mi_9]=Xiaomi       [Mi_10]=Xiaomi
          [Poco_F2]=Poco      [Redmi_Note_8]=Xiaomi
        )
        models=("${!DEVICE_MAP[@]}")
        idx=$(( RANDOM % ${#models[@]} ))
        MODEL="${models[$idx]}"
        MANUF="${DEVICE_MAP[$MODEL]}"
        IMEI="$(date +%s)"              # 以时间戳做简单 IMEI
        echo "MODEL=$MODEL"   >> $GITHUB_ENV
        echo "MANUF=$MANUF"   >> $GITHUB_ENV
        echo "IMEI=$IMEI"     >> $GITHUB_ENV

    # 6. 构建原生 Linux x86_64 magiskboot
    - name: 注入 Magisk
      run: |
        wget -O Magisk.zip \
        https://github.com/topjohnwu/Magisk/releases/download/v29.0/Magisk-v29.0.apk
        mkdir -p magisk
        unzip -j Magisk.zip \
        'lib/x86_64/libmagiskboot.so' \
        'lib/x86_64/libmagiskinit.so' \
        -d magisk/
        mv magisk/libmagiskboot.so magisk/magiskboot
        mv magisk/libmagiskinit.so magisk/magiskinit
        chmod +x magisk/magiskboot magisk/magiskinit

    # 5. 修改 system.img 的 build.prop
    - name: 编辑镜像（使用 qemu-nbd）
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-utils snap       # 包含 qemu-nbd 
        sudo snap install android-platform-tools
        sudo snap alias android-platform-tools.simg2img simg2img
        sudo snap alias android-platform-tools.img2simg img2simg
        simg2img original/system.img raw-system.img
        sudo modprobe nbd max_part=8                  # 加载 NBD 模块
        sudo qemu-nbd --format raw --connect=/dev/nbd0 raw-system.img
        # 挂载第一个分区（通常是 nbd0p1）
        sudo mkdir -p /mnt/img
        sudo mount /dev/nbd0 /mnt/img
        # 修改 build.prop
        sudo sed -i "s/^persist\.radio\.imei=.*/persist.radio.imei=${IMEI}/" /mnt/img/build.prop
        sudo sed -i "s/^ro\.product\.model=.*/ro.product.model=${MODEL}/" /mnt/img/build.prop
        sudo sed -i "s/^ro\.product\.manufacturer=.*/ro.product.manufacturer=${MANUF}/" /mnt/img/build.prop
        # 卸载并断开
        sudo umount /mnt/img
        sudo fuser -v /dev/nbd0
        sudo fuser -k /dev/nbd0
        sudo qemu-nbd --disconnect /dev/nbd0
        sudo modprobe -r nbd
        sudo rmmod nbd || true
        rm -rf original/system.img
        img2simg raw-system.img original/system.img
    
    # 7. 注入 Magisk
    - name: 注入 Magisk 到 boot.img
      run: |
        ./magisk/magiskboot --unpack original/boot.img
        mkdir ramdisk
        cd ramdisk
        gzip -dc ../ramdisk.cpio | cpio -i
        cp ../magisk/magiskinit init || true
        find . | cpio -o -H newc | gzip > ../new_ramdisk.cpio
        cd ..
        mv new_ramdisk.cpio ramdisk.cpio
        ./magisk/magiskboot --repack original/boot.img

    # 8. 多线程 XZ 压缩并准备发布
    - name: 压缩为 XZ
      run: |
        xz -T0 -z original/system.img
        xz -T0 -z original/boot.img
        mv original/system.img.xz system.img.xz
        mv original/boot.img.xz boot.img.xz

    # 9. 发布为新的 GitHub Release
    - name: 发布 Release 附件（XZ 格式）
      uses: softprops/action-gh-release@v1
      with:
        tag_name: weekly-${{ github.run_number }}
        name: GSI-with-Magisk-${{ github.run_number }}
        files: |
          system.img.xz
          boot.img.xz
